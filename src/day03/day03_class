1. 인터페이스 개념
: 사전적 의미 두 장치를 연결하는 접속기

    인터페이스 다형성 구현의 주요 기술로 이용된다.
    상속을 이용해서 다형성을 구현할 수도 있고,
    인터페이스를 이용해서 다형성을 구현할 수 있지만,
    실무에서는 다형성 구현에 인터페이스로 구현하는 경우가 대부분이다.


2. 인터페이스와 구현 클래스 선언
    interface 키워드를 사용하여 선언
    .java 소스 -> ~.class 컴파일되어 물리적으로 클래스와 동일하다.

    인터페이스 선언
    접근제한자로는 클래스와 같이 default, public


3. 인터페이스의 멤버들... 6멤버
    public 상수 필드
    public 추상 메소드
    public 디폴드 메소드 (예외인 일반 메소드)
    public static(정적) 메소드
    private 메소드
    private static 메소드

    3.1 public 상수 필드
        인터페이스는 public static final 특성을 갖는 상수 필드를 가질 수 있다.
        인터페이스의 필드는 public static final 의 특징을 갖는다.
        상수명 (한 번 정하면 변할 수 없는 값)
        ex) 가장 큰 값 -> maxValue (x) => MAXVALUE, MAX_VALUE (o)

실습) 동물(Animal)객체, 동물들은 모두 cry() 기능을 공통으로 가지고 있다.
    애완동물(Pet)객체, 애완동물들은 모두 play() 기능을 공통으로 가지고 있다.
    꼬리(tail)객체, 모든 동물들은 다양한 꼬리를 가지고 있다.
    고양이(Cat)은 꼬리를 갖고 있으며, 울며(cry()), 잘 논다(play()).

    3.2 추상 메서드(메소드) abstract method
    인터페이스는 구현(cat) 클래스가 재정의해야 하는 public 추상 메서드를 멤버로 가질 수 있다.
    리턴타입, 메소드명, 매개변수만 기술되고 중괄호{}를 붙이지 않는 메소드이다.
    (public abstract) returnType 메소드명(매개변수들...);




