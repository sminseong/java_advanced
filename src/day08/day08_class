Collection 인터페이스의 최상위 인터페이스 Iterable
- default void forEach ( Consumer<? super T> action ) : 함수형 프로그래밍 전용 루프 매서드
- Iterator <T> iterator() : 컬렉션에서 이터레이터를 구현
- default Spliterator<?> spliterator() : 파이프라이닝 관련 메서드

Map 인터페이스 -> Stream 을 사용하거나 간접적으로 키를 Collection 으로 반환하여 루프문으로 순회하는 식을 사용

결론 : List, Set, Queue 에 상속을 하는 실체적인 최상위 컬렉션 타입
    upcasting 으로 다양한 종류의 컬렉션 자료형을 받아 데이터를 삽입, 삭제, 탐색 기능을 처리할 수 있다.


2. Comparable Interface / Comparator Interface
    Comparable Interface 를 구현한 클래스는 compareTo() 메서드를 오버라이딩해서 구현 클래스 객체들간의 정렬 기준을 정의하여 정렬하라.
    (natural ordering) 정의한 클래스는 정렬함수를 통해서 정렬할 수 있다.
    리스트  Collection.sort()
    배열   Arrays.sort()

 상품(스마트폰) 클래스는 상품 이름과 가격 필드를 가지고 있다.



3. Comparator Interface - 객체를 정렬하는 데 사용하는 인터페이스
  익명 객체를 이용하여 다양한 속성을 받아 정렬할 수 있다는 장점이 있다.
